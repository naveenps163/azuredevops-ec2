trigger:
  branches:
    include:
      - main

variables:
  - group: terraform-envs

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Terraform
    displayName: 'Terraform Plan & Apply'
    jobs:
      - job: Plan
        displayName: 'Plan'
        steps:
          - checkout: self

          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'

          - task: TerraformCLI@5
            displayName: 'Terraform Init'
            inputs:
              provider: 'aws'
              command: 'init'
              workingDirectory: 'terraform'
            env:
              AWS_REGION: $(AWS_REGION)

          - task: TerraformCLI@5
            displayName: 'Terraform Plan'
            name: tfPlan
            inputs:
              provider: 'aws'
              command: 'plan'
              workingDirectory: 'terraform'
              environmentServiceNameAWS: 'AWS_CONNECTION'
              commandOptions: '-out=tfplan'
            env:
              AWS_REGION: $(AWS_REGION)
              TF_VAR_ami_id: $(TF_VAR_ami_id)
              TF_VAR_instance_type: $(TF_VAR_instance_type)

      - job: Apply
        displayName: 'Apply'
        dependsOn: Plan
        condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
        steps:
          - checkout: self

          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'

          - task: TerraformCLI@5
            displayName: 'Terraform Apply'
            inputs:
              provider: 'aws'
              command: 'apply'
              workingDirectory: 'terraform'
              environmentServiceNameAWS: 'AWS_CONNECTION'
              commandOptions: 'tfplan'
            env:
              AWS_REGION: $(AWS_REGION)
              TF_VAR_ami_id: $(TF_VAR_ami_id)
              TF_VAR_instance_type: $(TF_VAR_instance_type)
