trigger:
  branches: [ main ]

variables:
  - group: terraform-envs

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Terraform
  jobs:
    - job: Plan
      steps:
      - checkout: self

      - task: TerraformInstaller@1
        displayName: 'Install Terraform'

      - task: TerraformCLI@5
        displayName: 'Terraform Init'
        inputs:
          provider: 'aws'
          command: 'init'
          workingDirectory: 'terraform'
        env:
          AWS_REGION: $(AWS_REGION)

      - task: TerraformCLI@5
        name: tfPlan
        displayName: 'Terraform Plan'
        inputs:
          provider: 'aws'
          command: 'plan'
          workingDirectory: 'terraform'
          environmentServiceNameAWS: 'AWS_CONNECTION'
          commandOptions: '-out=tfplan'
        env:
          AWS_REGION: $(AWS_REGION)
          TF_VAR_ami_id: $(TF_VAR_ami_id)
          TF_VAR_instance_type: $(TF_VAR_instance_type)

    - job: Apply
      dependsOn: Plan
      condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
      steps:
      - checkout: self

      - task: TerraformInstaller@1
        displayName: 'Install Terraform'

      - task: TerraformCLI@5
        displayName: 'Terraform Apply'
        inputs:
          provider: 'aws'
          command: 'apply'
          workingDirectory: 'terraform'
          environmentServiceNameAWS: 'AWS_CONNECTION'
          commandOptions: 'tfplan'
        env:
          AWS_REGION: $(AWS_REGION)
          TF_VAR_ami_id: $(TF_VAR_ami_id)
          TF_VAR_instance_type: $(TF_VAR_instance_type)
